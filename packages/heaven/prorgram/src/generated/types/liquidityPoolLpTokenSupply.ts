/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type LiquidityPoolLpTokenSupply = {
  initial: bigint
  total: bigint
  unlocked: bigint
  locked: bigint
  burnt: bigint
}

export type LiquidityPoolLpTokenSupplyArgs = {
  initial: number | bigint
  total: number | bigint
  unlocked: number | bigint
  locked: number | bigint
  burnt: number | bigint
}

export function getLiquidityPoolLpTokenSupplyEncoder(): FixedSizeEncoder<LiquidityPoolLpTokenSupplyArgs> {
  return getStructEncoder([
    ['initial', getU64Encoder()],
    ['total', getU64Encoder()],
    ['unlocked', getU64Encoder()],
    ['locked', getU64Encoder()],
    ['burnt', getU64Encoder()],
  ])
}

export function getLiquidityPoolLpTokenSupplyDecoder(): FixedSizeDecoder<LiquidityPoolLpTokenSupply> {
  return getStructDecoder([
    ['initial', getU64Decoder()],
    ['total', getU64Decoder()],
    ['unlocked', getU64Decoder()],
    ['locked', getU64Decoder()],
    ['burnt', getU64Decoder()],
  ])
}

export function getLiquidityPoolLpTokenSupplyCodec(): FixedSizeCodec<
  LiquidityPoolLpTokenSupplyArgs,
  LiquidityPoolLpTokenSupply
> {
  return combineCodec(
    getLiquidityPoolLpTokenSupplyEncoder(),
    getLiquidityPoolLpTokenSupplyDecoder()
  )
}
