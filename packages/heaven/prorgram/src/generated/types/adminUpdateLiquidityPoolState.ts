/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit'
import {
  getCreatorTradingFeeClaimStatusDecoder,
  getCreatorTradingFeeClaimStatusEncoder,
  getCreatorTradingFeeDistributionDecoder,
  getCreatorTradingFeeDistributionEncoder,
  getFeeBracketsDecoder,
  getFeeBracketsEncoder,
  getFeeConfigurationModeDecoder,
  getFeeConfigurationModeEncoder,
  getFeeTypeDecoder,
  getFeeTypeEncoder,
  getSlotFeeBracketsDecoder,
  getSlotFeeBracketsEncoder,
  type CreatorTradingFeeClaimStatus,
  type CreatorTradingFeeClaimStatusArgs,
  type CreatorTradingFeeDistribution,
  type CreatorTradingFeeDistributionArgs,
  type FeeBrackets,
  type FeeBracketsArgs,
  type FeeConfigurationMode,
  type FeeConfigurationModeArgs,
  type FeeType,
  type FeeTypeArgs,
  type SlotFeeBrackets,
  type SlotFeeBracketsArgs,
} from '.'

export type AdminUpdateLiquidityPoolState =
  | {
      __kind: 'CreatorTradingFeeClaimStatus'
      fields: readonly [CreatorTradingFeeClaimStatus]
    }
  | {
      __kind: 'CreatorTradingFeeDistribution'
      fields: readonly [CreatorTradingFeeDistribution]
    }
  | { __kind: 'CreatorTradingFeeReceiver'; fields: readonly [Address] }
  | { __kind: 'FeeConfigurationMode'; fields: readonly [FeeConfigurationMode] }
  | { __kind: 'SlotOffsetBasedFees'; feeType: FeeType; fees: SlotFeeBrackets }
  | { __kind: 'MarketCapBasedFees'; feeType: FeeType; fees: FeeBrackets }
  | { __kind: 'ToggleSwapPermission'; fields: readonly [boolean] }

export type AdminUpdateLiquidityPoolStateArgs =
  | {
      __kind: 'CreatorTradingFeeClaimStatus'
      fields: readonly [CreatorTradingFeeClaimStatusArgs]
    }
  | {
      __kind: 'CreatorTradingFeeDistribution'
      fields: readonly [CreatorTradingFeeDistributionArgs]
    }
  | { __kind: 'CreatorTradingFeeReceiver'; fields: readonly [Address] }
  | {
      __kind: 'FeeConfigurationMode'
      fields: readonly [FeeConfigurationModeArgs]
    }
  | {
      __kind: 'SlotOffsetBasedFees'
      feeType: FeeTypeArgs
      fees: SlotFeeBracketsArgs
    }
  | {
      __kind: 'MarketCapBasedFees'
      feeType: FeeTypeArgs
      fees: FeeBracketsArgs
    }
  | { __kind: 'ToggleSwapPermission'; fields: readonly [boolean] }

export function getAdminUpdateLiquidityPoolStateEncoder(): Encoder<AdminUpdateLiquidityPoolStateArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'CreatorTradingFeeClaimStatus',
      getStructEncoder([['fields', getTupleEncoder([getCreatorTradingFeeClaimStatusEncoder()])]]),
    ],
    [
      'CreatorTradingFeeDistribution',
      getStructEncoder([['fields', getTupleEncoder([getCreatorTradingFeeDistributionEncoder()])]]),
    ],
    [
      'CreatorTradingFeeReceiver',
      getStructEncoder([['fields', getTupleEncoder([getAddressEncoder()])]]),
    ],
    [
      'FeeConfigurationMode',
      getStructEncoder([['fields', getTupleEncoder([getFeeConfigurationModeEncoder()])]]),
    ],
    [
      'SlotOffsetBasedFees',
      getStructEncoder([
        ['feeType', getFeeTypeEncoder()],
        ['fees', getSlotFeeBracketsEncoder()],
      ]),
    ],
    [
      'MarketCapBasedFees',
      getStructEncoder([
        ['feeType', getFeeTypeEncoder()],
        ['fees', getFeeBracketsEncoder()],
      ]),
    ],
    [
      'ToggleSwapPermission',
      getStructEncoder([['fields', getTupleEncoder([getBooleanEncoder()])]]),
    ],
  ])
}

export function getAdminUpdateLiquidityPoolStateDecoder(): Decoder<AdminUpdateLiquidityPoolState> {
  return getDiscriminatedUnionDecoder([
    [
      'CreatorTradingFeeClaimStatus',
      getStructDecoder([['fields', getTupleDecoder([getCreatorTradingFeeClaimStatusDecoder()])]]),
    ],
    [
      'CreatorTradingFeeDistribution',
      getStructDecoder([['fields', getTupleDecoder([getCreatorTradingFeeDistributionDecoder()])]]),
    ],
    [
      'CreatorTradingFeeReceiver',
      getStructDecoder([['fields', getTupleDecoder([getAddressDecoder()])]]),
    ],
    [
      'FeeConfigurationMode',
      getStructDecoder([['fields', getTupleDecoder([getFeeConfigurationModeDecoder()])]]),
    ],
    [
      'SlotOffsetBasedFees',
      getStructDecoder([
        ['feeType', getFeeTypeDecoder()],
        ['fees', getSlotFeeBracketsDecoder()],
      ]),
    ],
    [
      'MarketCapBasedFees',
      getStructDecoder([
        ['feeType', getFeeTypeDecoder()],
        ['fees', getFeeBracketsDecoder()],
      ]),
    ],
    [
      'ToggleSwapPermission',
      getStructDecoder([['fields', getTupleDecoder([getBooleanDecoder()])]]),
    ],
  ])
}

export function getAdminUpdateLiquidityPoolStateCodec(): Codec<
  AdminUpdateLiquidityPoolStateArgs,
  AdminUpdateLiquidityPoolState
> {
  return combineCodec(
    getAdminUpdateLiquidityPoolStateEncoder(),
    getAdminUpdateLiquidityPoolStateDecoder()
  )
}

// Data Enum Helpers.
export function adminUpdateLiquidityPoolState(
  kind: 'CreatorTradingFeeClaimStatus',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'CreatorTradingFeeClaimStatus'
  >['fields']
): GetDiscriminatedUnionVariant<
  AdminUpdateLiquidityPoolStateArgs,
  '__kind',
  'CreatorTradingFeeClaimStatus'
>
export function adminUpdateLiquidityPoolState(
  kind: 'CreatorTradingFeeDistribution',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'CreatorTradingFeeDistribution'
  >['fields']
): GetDiscriminatedUnionVariant<
  AdminUpdateLiquidityPoolStateArgs,
  '__kind',
  'CreatorTradingFeeDistribution'
>
export function adminUpdateLiquidityPoolState(
  kind: 'CreatorTradingFeeReceiver',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'CreatorTradingFeeReceiver'
  >['fields']
): GetDiscriminatedUnionVariant<
  AdminUpdateLiquidityPoolStateArgs,
  '__kind',
  'CreatorTradingFeeReceiver'
>
export function adminUpdateLiquidityPoolState(
  kind: 'FeeConfigurationMode',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'FeeConfigurationMode'
  >['fields']
): GetDiscriminatedUnionVariant<AdminUpdateLiquidityPoolStateArgs, '__kind', 'FeeConfigurationMode'>
export function adminUpdateLiquidityPoolState(
  kind: 'SlotOffsetBasedFees',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'SlotOffsetBasedFees'
  >
): GetDiscriminatedUnionVariant<AdminUpdateLiquidityPoolStateArgs, '__kind', 'SlotOffsetBasedFees'>
export function adminUpdateLiquidityPoolState(
  kind: 'MarketCapBasedFees',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'MarketCapBasedFees'
  >
): GetDiscriminatedUnionVariant<AdminUpdateLiquidityPoolStateArgs, '__kind', 'MarketCapBasedFees'>
export function adminUpdateLiquidityPoolState(
  kind: 'ToggleSwapPermission',
  data: GetDiscriminatedUnionVariantContent<
    AdminUpdateLiquidityPoolStateArgs,
    '__kind',
    'ToggleSwapPermission'
  >['fields']
): GetDiscriminatedUnionVariant<AdminUpdateLiquidityPoolStateArgs, '__kind', 'ToggleSwapPermission'>
export function adminUpdateLiquidityPoolState<
  K extends AdminUpdateLiquidityPoolStateArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data) ? { __kind: kind, fields: data } : { __kind: kind, ...(data ?? {}) }
}

export function isAdminUpdateLiquidityPoolState<K extends AdminUpdateLiquidityPoolState['__kind']>(
  kind: K,
  value: AdminUpdateLiquidityPoolState
): value is AdminUpdateLiquidityPoolState & { __kind: K } {
  return value.__kind === kind
}
