/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit'

export type UserDefinedEvent = {
  liquidityPoolId: Address
  instructionName: string
  base64Data: string
}

export type UserDefinedEventArgs = UserDefinedEvent

export function getUserDefinedEventEncoder(): Encoder<UserDefinedEventArgs> {
  return getStructEncoder([
    ['liquidityPoolId', getAddressEncoder()],
    ['instructionName', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['base64Data', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ])
}

export function getUserDefinedEventDecoder(): Decoder<UserDefinedEvent> {
  return getStructDecoder([
    ['liquidityPoolId', getAddressDecoder()],
    ['instructionName', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['base64Data', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ])
}

export function getUserDefinedEventCodec(): Codec<UserDefinedEventArgs, UserDefinedEvent> {
  return combineCodec(getUserDefinedEventEncoder(), getUserDefinedEventDecoder())
}
