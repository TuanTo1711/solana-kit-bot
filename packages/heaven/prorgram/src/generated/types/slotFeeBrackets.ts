/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit'
import {
  getSlotFeeBracketDecoder,
  getSlotFeeBracketEncoder,
  type SlotFeeBracket,
  type SlotFeeBracketArgs,
} from '.'

export type SlotFeeBrackets = {
  brackets: Array<SlotFeeBracket>
  maxSlotOffset: number
  maxFeeBps: number
  count: number
  enabled: number
  padding: ReadonlyUint8Array
}

export type SlotFeeBracketsArgs = {
  brackets: Array<SlotFeeBracketArgs>
  maxSlotOffset: number
  maxFeeBps: number
  count: number
  enabled: number
  padding: ReadonlyUint8Array
}

export function getSlotFeeBracketsEncoder(): FixedSizeEncoder<SlotFeeBracketsArgs> {
  return getStructEncoder([
    ['brackets', getArrayEncoder(getSlotFeeBracketEncoder(), { size: 42 })],
    ['maxSlotOffset', getU16Encoder()],
    ['maxFeeBps', getU16Encoder()],
    ['count', getU8Encoder()],
    ['enabled', getU8Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 4)],
  ])
}

export function getSlotFeeBracketsDecoder(): FixedSizeDecoder<SlotFeeBrackets> {
  return getStructDecoder([
    ['brackets', getArrayDecoder(getSlotFeeBracketDecoder(), { size: 42 })],
    ['maxSlotOffset', getU16Decoder()],
    ['maxFeeBps', getU16Decoder()],
    ['count', getU8Decoder()],
    ['enabled', getU8Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 4)],
  ])
}

export function getSlotFeeBracketsCodec(): FixedSizeCodec<SlotFeeBracketsArgs, SlotFeeBrackets> {
  return combineCodec(getSlotFeeBracketsEncoder(), getSlotFeeBracketsDecoder())
}
