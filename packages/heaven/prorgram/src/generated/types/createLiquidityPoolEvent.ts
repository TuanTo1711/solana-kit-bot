/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type CreateLiquidityPoolEvent = {
  liquidityPoolId: Address
  user: Address
  baseTokenInputTransferFeeAmount: bigint
  quoteTokenInputTransferFeeAmount: bigint
  baseTokenInputAmount: bigint
  quoteTokenInputAmount: bigint
  lpTokenOutputAmount: bigint
  lockedLp: boolean
}

export type CreateLiquidityPoolEventArgs = {
  liquidityPoolId: Address
  user: Address
  baseTokenInputTransferFeeAmount: number | bigint
  quoteTokenInputTransferFeeAmount: number | bigint
  baseTokenInputAmount: number | bigint
  quoteTokenInputAmount: number | bigint
  lpTokenOutputAmount: number | bigint
  lockedLp: boolean
}

export function getCreateLiquidityPoolEventEncoder(): FixedSizeEncoder<CreateLiquidityPoolEventArgs> {
  return getStructEncoder([
    ['liquidityPoolId', getAddressEncoder()],
    ['user', getAddressEncoder()],
    ['baseTokenInputTransferFeeAmount', getU64Encoder()],
    ['quoteTokenInputTransferFeeAmount', getU64Encoder()],
    ['baseTokenInputAmount', getU64Encoder()],
    ['quoteTokenInputAmount', getU64Encoder()],
    ['lpTokenOutputAmount', getU64Encoder()],
    ['lockedLp', getBooleanEncoder()],
  ])
}

export function getCreateLiquidityPoolEventDecoder(): FixedSizeDecoder<CreateLiquidityPoolEvent> {
  return getStructDecoder([
    ['liquidityPoolId', getAddressDecoder()],
    ['user', getAddressDecoder()],
    ['baseTokenInputTransferFeeAmount', getU64Decoder()],
    ['quoteTokenInputTransferFeeAmount', getU64Decoder()],
    ['baseTokenInputAmount', getU64Decoder()],
    ['quoteTokenInputAmount', getU64Decoder()],
    ['lpTokenOutputAmount', getU64Decoder()],
    ['lockedLp', getBooleanDecoder()],
  ])
}

export function getCreateLiquidityPoolEventCodec(): FixedSizeCodec<
  CreateLiquidityPoolEventArgs,
  CreateLiquidityPoolEvent
> {
  return combineCodec(getCreateLiquidityPoolEventEncoder(), getCreateLiquidityPoolEventDecoder())
}
