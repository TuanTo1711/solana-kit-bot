/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type CreateStandardLiquidityPoolEvent = {
  poolId: Address
  payer: Address
  creator: Address
  mint: Address
  configVersion: number
  initialTokenReserve: bigint
  initialVirtualWsolReserve: bigint
}

export type CreateStandardLiquidityPoolEventArgs = {
  poolId: Address
  payer: Address
  creator: Address
  mint: Address
  configVersion: number
  initialTokenReserve: number | bigint
  initialVirtualWsolReserve: number | bigint
}

export function getCreateStandardLiquidityPoolEventEncoder(): FixedSizeEncoder<CreateStandardLiquidityPoolEventArgs> {
  return getStructEncoder([
    ['poolId', getAddressEncoder()],
    ['payer', getAddressEncoder()],
    ['creator', getAddressEncoder()],
    ['mint', getAddressEncoder()],
    ['configVersion', getU16Encoder()],
    ['initialTokenReserve', getU64Encoder()],
    ['initialVirtualWsolReserve', getU64Encoder()],
  ])
}

export function getCreateStandardLiquidityPoolEventDecoder(): FixedSizeDecoder<CreateStandardLiquidityPoolEvent> {
  return getStructDecoder([
    ['poolId', getAddressDecoder()],
    ['payer', getAddressDecoder()],
    ['creator', getAddressDecoder()],
    ['mint', getAddressDecoder()],
    ['configVersion', getU16Decoder()],
    ['initialTokenReserve', getU64Decoder()],
    ['initialVirtualWsolReserve', getU64Decoder()],
  ])
}

export function getCreateStandardLiquidityPoolEventCodec(): FixedSizeCodec<
  CreateStandardLiquidityPoolEventArgs,
  CreateStandardLiquidityPoolEvent
> {
  return combineCodec(
    getCreateStandardLiquidityPoolEventEncoder(),
    getCreateStandardLiquidityPoolEventDecoder()
  )
}
