/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

/** Emitted when swap */
export type SwapEvent = {
  poolId: Address
  /** pool vault sub trade fees */
  inputVaultBefore: bigint
  /** pool vault sub trade fees */
  outputVaultBefore: bigint
  /** calculate result without transfer fee */
  inputAmount: bigint
  /** calculate result without transfer fee */
  outputAmount: bigint
  inputTransferFee: bigint
  outputTransferFee: bigint
  baseInput: boolean
}

export type SwapEventArgs = {
  poolId: Address
  /** pool vault sub trade fees */
  inputVaultBefore: number | bigint
  /** pool vault sub trade fees */
  outputVaultBefore: number | bigint
  /** calculate result without transfer fee */
  inputAmount: number | bigint
  /** calculate result without transfer fee */
  outputAmount: number | bigint
  inputTransferFee: number | bigint
  outputTransferFee: number | bigint
  baseInput: boolean
}

export function getSwapEventEncoder(): FixedSizeEncoder<SwapEventArgs> {
  return getStructEncoder([
    ['poolId', getAddressEncoder()],
    ['inputVaultBefore', getU64Encoder()],
    ['outputVaultBefore', getU64Encoder()],
    ['inputAmount', getU64Encoder()],
    ['outputAmount', getU64Encoder()],
    ['inputTransferFee', getU64Encoder()],
    ['outputTransferFee', getU64Encoder()],
    ['baseInput', getBooleanEncoder()],
  ])
}

export function getSwapEventDecoder(): FixedSizeDecoder<SwapEvent> {
  return getStructDecoder([
    ['poolId', getAddressDecoder()],
    ['inputVaultBefore', getU64Decoder()],
    ['outputVaultBefore', getU64Decoder()],
    ['inputAmount', getU64Decoder()],
    ['outputAmount', getU64Decoder()],
    ['inputTransferFee', getU64Decoder()],
    ['outputTransferFee', getU64Decoder()],
    ['baseInput', getBooleanDecoder()],
  ])
}

export function getSwapEventCodec(): FixedSizeCodec<SwapEventArgs, SwapEvent> {
  return combineCodec(getSwapEventEncoder(), getSwapEventDecoder())
}
