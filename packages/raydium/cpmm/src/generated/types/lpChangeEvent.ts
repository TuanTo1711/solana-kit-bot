/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

/** Emitted when deposit and withdraw */
export type LpChangeEvent = {
  poolId: Address
  lpAmountBefore: bigint
  /** pool vault sub trade fees */
  token0VaultBefore: bigint
  /** pool vault sub trade fees */
  token1VaultBefore: bigint
  /** calculate result without transfer fee */
  token0Amount: bigint
  /** calculate result without transfer fee */
  token1Amount: bigint
  token0TransferFee: bigint
  token1TransferFee: bigint
  changeType: number
}

export type LpChangeEventArgs = {
  poolId: Address
  lpAmountBefore: number | bigint
  /** pool vault sub trade fees */
  token0VaultBefore: number | bigint
  /** pool vault sub trade fees */
  token1VaultBefore: number | bigint
  /** calculate result without transfer fee */
  token0Amount: number | bigint
  /** calculate result without transfer fee */
  token1Amount: number | bigint
  token0TransferFee: number | bigint
  token1TransferFee: number | bigint
  changeType: number
}

export function getLpChangeEventEncoder(): FixedSizeEncoder<LpChangeEventArgs> {
  return getStructEncoder([
    ['poolId', getAddressEncoder()],
    ['lpAmountBefore', getU64Encoder()],
    ['token0VaultBefore', getU64Encoder()],
    ['token1VaultBefore', getU64Encoder()],
    ['token0Amount', getU64Encoder()],
    ['token1Amount', getU64Encoder()],
    ['token0TransferFee', getU64Encoder()],
    ['token1TransferFee', getU64Encoder()],
    ['changeType', getU8Encoder()],
  ])
}

export function getLpChangeEventDecoder(): FixedSizeDecoder<LpChangeEvent> {
  return getStructDecoder([
    ['poolId', getAddressDecoder()],
    ['lpAmountBefore', getU64Decoder()],
    ['token0VaultBefore', getU64Decoder()],
    ['token1VaultBefore', getU64Decoder()],
    ['token0Amount', getU64Decoder()],
    ['token1Amount', getU64Decoder()],
    ['token0TransferFee', getU64Decoder()],
    ['token1TransferFee', getU64Decoder()],
    ['changeType', getU8Decoder()],
  ])
}

export function getLpChangeEventCodec(): FixedSizeCodec<LpChangeEventArgs, LpChangeEvent> {
  return combineCodec(getLpChangeEventEncoder(), getLpChangeEventDecoder())
}
